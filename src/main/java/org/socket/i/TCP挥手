TCP正常的关闭过程如下（四次挥手过程）：
(SYN_WAIT_1)  A   ----SYN----->    B(SYN_WAIT_2)
(ESTABLISH)  A   <----ACK+SYN-----    B(SYN_WAIT_2)
(ESTABLISH)  A   ----ACK-----> B(ESTABLISH)

(FIN_WAIT_1) A       ---FIN--->     B(CLOSE_WAIT)
(FIN_WAIT_2) A       <--ACK--       B(CLOSE_WAIT)
(TIME_WAIT)A         <--FIN----     B(LAST_ACK)
(TIME_WAIT)A         ---ACK->       B(CLOSED)

除了如上正常的关闭（优雅关闭）之外，TCP还提供了另外一种非优雅的关闭方式RST(Reset)
(CLOSED) A         ---RST-->      B (CLOSED)

在第一种关闭方式上（优雅关闭），非常遗憾，A端在最后发送一个ACK请求后，
并不能马上将该Socket回收，因为A并不能确定B一定能够接收到这个ACK请求，
因此A端必须对这个Socket维持TIME_WAIT状态2MSL
(MSL=Max Segment Lifetime，取决于操作系统和TCP实现，该值为30秒、60秒或2分钟)。
如果A端是客户端，这并不会成为问题，但如果A端是服务端，
那就很危险了，如果连接的Socket非常多，而又维持如此多的TIME_WAIT状态的话，
那么有可能会将Socket耗尽（报Too Many Open File）

服务端为了解决这个TIME_WAIT问题，可选择的方式有三种：
1、保证由客户端主动发起关闭（即做为B端）
2、关闭的时候使用RST的方式
3、对处于TIME_WAIT状态的TCP允许重用
一般我们当然最好是选择第一种方式，
实在没有办法的时候，我们可以使用SO_LINGER选择第二种方式，
使用SO_REUSEADDR选择第三种方式